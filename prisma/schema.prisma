generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}


// User model
model User {
  id        Int     @id @default(autoincrement())
  name      String
  email     String  @unique
  password  String
  role      String  // Role as a String
  doctor    Doctor? @relation
  patient   Patient?
  nurse     Nurse?
}

// Doctor model
model Doctor {
  id          Int         @id @default(autoincrement())
  userId      Int         @unique
  specialty   String
  experience  Int 
  user        User        @relation(fields: [userId], references: [id])
  appointments Appointment[]
}

// Patient model
model Patient {
  id          Int         @id @default(autoincrement())
  userId      Int         @unique
  user        User        @relation(fields: [userId], references: [id])
  age         Int
  gender      String
  appointments Appointment[]
}

// Nurse model
model Nurse {
  id          Int         @id @default(autoincrement())
  userId      Int         @unique
  department  String
  shift       String 
  user        User        @relation(fields: [userId], references: [id])
  appointments Appointment[]
}

// Appointment model
model Appointment {
  id         Int      @id @default(autoincrement())
  date       DateTime
  doctorId   Int
  patientId  Int
  doctor     Doctor   @relation(fields: [doctorId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  patient    Patient  @relation(fields: [patientId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  nurseId    Int?
  nurse      Nurse?   @relation(fields: [nurseId], references: [id], onUpdate: NoAction, onDelete: NoAction)
}

//Slot
model DoctorScheduleSlot {
  id           Int      @id @default(autoincrement())
  startTime    String
  endTime      String
  maxPatients  Int      @default(25)
  available    Boolean  @default(true)

  createdAt    DateTime @default(now())
}